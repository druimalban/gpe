/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>

#include <gdk/gdkkeysyms.h>
#include <gtk/gtk.h>

#include "callbacks.h"
#include "interface.h"
#include "support.h"

#define GLADE_HOOKUP_OBJECT(component,widget,name) \
  g_object_set_data_full (G_OBJECT (component), name, \
    gtk_widget_ref (widget), (GDestroyNotify) gtk_widget_unref)

#define GLADE_HOOKUP_OBJECT_NO_REF(component,widget,name) \
  g_object_set_data (G_OBJECT (component), name, widget)

GtkWidget*
create_window1 (void)
{
  GtkWidget *window1;
  GtkWidget *vbox1;
  GtkWidget *scrolledwindow1;
  GtkWidget *iconview1;
  GtkWidget *fixed1;
  GtkWidget *button3;
  GtkWidget *button1;
  GtkWidget *button2;

  window1 = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (window1, 240, 288);
  gtk_window_set_title (GTK_WINDOW (window1), _("WiFi Network Scan"));

  vbox1 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox1);
  gtk_container_add (GTK_CONTAINER (window1), vbox1);

  scrolledwindow1 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow1);
  gtk_box_pack_start (GTK_BOX (vbox1), scrolledwindow1, TRUE, TRUE, 0);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (scrolledwindow1), GTK_POLICY_NEVER, GTK_POLICY_AUTOMATIC);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow1), GTK_SHADOW_IN);

  iconview1 = gtk_icon_view_new ();
  gtk_widget_show (iconview1);
  gtk_container_add (GTK_CONTAINER (scrolledwindow1), iconview1);

  fixed1 = gtk_fixed_new ();
  gtk_widget_show (fixed1);
  gtk_box_pack_start (GTK_BOX (vbox1), fixed1, FALSE, FALSE, 0);
  gtk_widget_set_size_request (fixed1, -1, 103);

  button3 = gtk_button_new_from_stock ("gtk-connect");
  gtk_widget_show (button3);
  gtk_fixed_put (GTK_FIXED (fixed1), button3, 128, 56);
  gtk_widget_set_size_request (button3, 104, 40);

  button1 = gtk_button_new_from_stock ("gtk-refresh");
  gtk_widget_show (button1);
  gtk_fixed_put (GTK_FIXED (fixed1), button1, 72, 8);
  gtk_widget_set_size_request (button1, 104, 40);

  button2 = gtk_button_new_from_stock ("gtk-edit");
  gtk_widget_show (button2);
  gtk_fixed_put (GTK_FIXED (fixed1), button2, 8, 56);
  gtk_widget_set_size_request (button2, 104, 40);

  g_signal_connect ((gpointer) window1, "destroy",
                    G_CALLBACK (gtk_main_quit),
                    NULL);
  g_signal_connect_swapped ((gpointer) window1, "show",
                            G_CALLBACK (on_window1_show),
                            GTK_OBJECT (window1));
  g_signal_connect_swapped ((gpointer) button3, "button_press_event",
                            G_CALLBACK (on_button3_button_press_event),
                            GTK_OBJECT (window1));
  g_signal_connect ((gpointer) button3, "destroy",
                    G_CALLBACK (gtk_main_quit),
                    NULL);
  g_signal_connect_swapped ((gpointer) button3, "button_release_event",
                            G_CALLBACK (on_button3_button_release_event),
                            GTK_OBJECT (window1));
  g_signal_connect_swapped ((gpointer) button1, "button_press_event",
                            G_CALLBACK (on_button1_button_press_event),
                            GTK_OBJECT (window1));
  g_signal_connect_swapped ((gpointer) button1, "button_release_event",
                            G_CALLBACK (on_button1_button_release_event),
                            GTK_OBJECT (window1));
  g_signal_connect_swapped ((gpointer) button2, "button_press_event",
                            G_CALLBACK (on_button2_button_press_event),
                            GTK_OBJECT (window1));
  g_signal_connect_swapped ((gpointer) button2, "button_release_event",
                            G_CALLBACK (on_button2_button_release_event),
                            GTK_OBJECT (window1));

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (window1, window1, "window1");
  GLADE_HOOKUP_OBJECT (window1, vbox1, "vbox1");
  GLADE_HOOKUP_OBJECT (window1, scrolledwindow1, "scrolledwindow1");
  GLADE_HOOKUP_OBJECT (window1, iconview1, "iconview1");
  GLADE_HOOKUP_OBJECT (window1, fixed1, "fixed1");
  GLADE_HOOKUP_OBJECT (window1, button3, "button3");
  GLADE_HOOKUP_OBJECT (window1, button1, "button1");
  GLADE_HOOKUP_OBJECT (window1, button2, "button2");

  return window1;
}

