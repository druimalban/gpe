2004-06-22  Lluis Sanchez Gual  <lluis@ximian.com>

	* ReflectionHelper.cs: Correctly detect private types.
	* XmlCodeExporter.cs: Implemented missing method.
	* XmlSchemaImporter.cs: Allow import of root primitive types.

2004-06-18  Atsushi Enomoto  <atsushi@ximian.com>

	* CodeIdentifier.cs, CodeIdentifiers.cs, MapCodeGenerator.cs,
	  SerializationCodeGenerator.cs, SerializationSource.cs,
	  TypeTranslator.cs, XmlAttributeOverrides.cs, XmlCustomFormatter.cs,
	  XmlSerializationReader.cs, XmlSerializationWriter.cs,
	  XmlSerializer.cs, XmlTypeMapMemberElement.cs, XmlTypeMapping.cs
	  : Globalization fixes.
	    In XmlCustomFormatter.GenerateToXmlString() time was not
	    generated correctly.
	    Replaced all CRLF XmlAttributeOverrides.cs into LF.

2004-06-13  Gert Driesen <drieseng@users.sourceforge.net>

	* XmlSerializationWriter.cs: changed signature of protected method
	FromByteArrayBase64 to match MS.NET

2004-06-10  Lluis Sanchez Gual <lluis@ximian.com>

	* MapCodeGenerator.cs, SoapCodeExporter.cs: Generate the same XmlInclude
	  attributes that MS.NET generates.
	* SerializationCodeGenerator.cs: Avoid duplicate generation of maps in the
	  same reader/writer.
	* XmlCodeExporter.cs: Added support for ignore flag in maps and members.
	* XmlReflectionImporter.cs: Changed GetReflectionMembers to match
	  MS.NET member ordering. Patch by David Taylor.
	* XmlSchemaImporter.cs: When generating a choice member, set the ignore
	  flag. The generated enum must also not be included in the schema.
	* XmlTypeMapMember.cs: Added ignore flag.
	* XmlTypeMapping.cs: The AttributeMembers property now returns the 
	  attributes in the correct order.

2004-06-03  Gert Driesen <drieseng@users.sourceforge.net>

	* XmlSerializationReader.cs: added missing protected members
	to fix API compatibility with MS.NET
	* XmlSerializationWriter.cs: added missing protected members
	to fix API compatibility with MS.NET

2004-06-02  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationReader.cs: Support schamea instance namespaces other than
	  the 2001 one when reading the xsi type.
	* MapCodeGenerator.cs: Take into account that the root namespace and element
	  name may have changed from one export to another of the same type. In
	  this case the class attributes need to be regenerated.
	* SoapCodeExporter.cs, XmlCodeExporter.cs: Take the enum name from XmlType,
	  not ElementName. Idem for namespace.
	* XmlReflectionImporter.cs: Set nullable property of XmlTypeMapping.
	* XmlRootAttribute.cs: Default value for nullable is true.
	* XmlSchemaImporter.cs: The root name for a class may change in some
	  scenarios (for example, when the type is initially exported as part of
	  another type and later exported as a root type).
	* XmlSerializationReader.cs: In GetXsiType(), if the type attribute is not
	  found using the standard namespace, try getting the type using
	  the 2000/10 and 1999 namespaces.
	* XmlTypeMapping.cs: Added IsNullable property. Updated SetRoot method ;-)

2004-05-26  Lluis Sanchez Gual <lluis@ximian.com>

	* SerializationCodeGenerator.cs, XmlSerializationReaderInterpreter.cs:
	  In encoded format, primitive types can be null. Read them using
	  ReadReferencingElement, that already checks for the null tag.

2004-05-25  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationReader.cs: Check for empty element when reading an array
	  element. This fixes bug #59003. Thanks Atsushi!

2004-05-07  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationWriter.cs: Implemented some missing methods.
	  In .NET 1.0, encoded null elements use the attribute null="1", while in
	  1.1 the attribute is nil="true".
	* XmlTypeMapping.cs: Little fix for nested classes.

2004-05-07  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlReflectionImporter.cs: Don't reset the internal tables at every
	  ImportMembersMapping call. This fixes bug #58112. The problem is that
	  it imported two different arrays (only different in the array item
	  namespace) with the same name. Not sure what was this Reset needed for,
	  everyting seems to work without it.

2004-05-05  Lluis Sanchez Gual <lluis@ximian.com>

	* SerializationCodeGenerator.cs, XmlSerializationReaderInterpreter.cs: 
	  When deserializing an encoded method response, if the return type of the
	  method is Object, assign to it the first element of the message, whatever
	  it is.
	* XmlSerializationReader.cs: 
	* SoapReflectionImporter.cs, XmlReflectionImporter.cs: Set IsReturnValue of
	  the imported member.
	* TypeTranslator.cs: Added method to safely get a primitive TypeData.
	* XmlSerializationReader.cs: Don't throw an exception when the CLR type for
	  a given xsi type is not found. Just read it as primitive type.
	* XmlTypeMapMember.cs: Added IsReturnValue property.
	* XmlTypeMapping.cs: Added ReturnMember property.
	* XmlSerializer.cs: Reference System.Data when compiling the serializer.

2004-05-05  Lluis Sanchez Gual <lluis@ximian.com>

	* SerializationCodeGenerator.cs, XmlSerializationReaderInterpreter.cs: 
	  When reading an object using the typeof(object) map, an emty xsi:type 
	  means that it has to read the contents into an XmlNode[].
	* TypeData.cs: Return the correct full name for inner classes.
	* XmlSchemaImporter.cs: Improved detection of types that represent 
	  "anyType", and must be mapped to XmlElement, XmlNode or Object.
	* XmlSerializationReader.cs: In GetXsiType(), find the type attribute using
	  the correct namespace.
	  In ReadTypedPrimitive(), read the element as XmlNode[] if the type is
	  not known.

2004-05-05  Atsushi Enomoto  <atsushi@ximian.com>

	* XmlSerializationWriter.cs : It do not have to handle schema
	  namespace as special one.

2004-05-03  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationReaderInterpreter.cs: Removed the check for null 
	  AttributeMembers collection. Even if there are no attribute members,
	  attributes need to be read.

2004-05-03  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationReader.cs: In ReadSerializable(), take into account that
	  the IXmlSerializable object may not read all the EndElement it read.
	  This fixes bug #57413.

2004-05-03  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializer.cs: Enable serializer generation by default.

2004-04-20  Lluis Sanchez Gual <lluis@ximian.com>

	* TypeTranslator.cs: Mapped again anyUri, but now it is mapped to String.
	* XmlSchemaImporter.cs: If a map was initially imported as a class, but it
	  turns out that it is an array, import it again as array. This fixes
	  bug #57133.

2004-04-15  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSchemaExporter.cs: When checking if a map has been exported or not,
	  don't use type name for array types, since we can have different classes 
	  that represent the same array type (for example StringCollection and 
	  string[]).

2004-04-14  Lluis Sanchez Gual <lluis@ximian.com>

	* TypeTranslator.cs, XmlCustomFormatter.cs: Removed map from Uri to anyUri,
	  not present in MS.NET.
	* XmlSerializationWriter.cs: Improved error message.

2004-03-30  Lluis Sanchez Gual <lluis@ximian.com>

	* SerializationCodeGenerator.cs, XmlReflectionImporter.cs, 
	  XmlSerializationReader.cs, XmlSerializationReaderInterpreter.cs:
	  Support deserialization of members of type XmlDocument. This fixes #56169.

2004-03-25  Lluis Sanchez Gual <lluis@ximian.com>

	* SerializationCodeGenerator.cs: Generate an integer for unknown enum values.
	  Use a special method to generate default values, since default enum values
	  will come as integers, so a special cast is needed.
	* XmlSerializationReaderInterpreter.cs,
	* SerializationSource.cs, SoapAttributeAttribute.cs, SoapAttributeOverrides.cs,
	  SoapAttributes.cs, SoapElementAttribute.cs, SoapEnumAttribute.cs, 
	  SoapTypeAttribute.cs, XmlAnyElementAttribute.cs, XmlAnyElementAttributes.cs,
	  XmlArrayAttribute.cs, XmlArrayItemAttribute.cs, XmlArrayItemAttributes.cs, 
	  XmlAttributeAttribute.cs, XmlAttributeOverrides.cs, XmlAttributes.cs,
	  XmlChoiceIdentifierAttribute.cs, XmlElementAttribute.cs, XmlElementAttributes.cs,
	  XmlEnumAttribute.cs, XmlReflectionMember.cs, XmlRootAttribute.cs,
	  XmlTextAttribute.cs, XmlTypeAttribute.cs: Had to change the implementation
	  of SerializationSource. It can't keep and use the XmlAttributeOverride
	  instances as key values, since those instances can be modified after the
	  xml map has been generated. Now, SerializationSource generates a unique 
	  string hash from XmlAttributeOverride and uses it for comparisons.

2004-03-24  Lluis Sanchez Gual <lluis@ximian.com>

	* SerializationCodeGenerator.cs: Several fixes: generate valid names for 
	  WriteRoot_ and ReadRoot_ methods. Cast result of ReadTypedPrimitive to
	  the adequate type. Set the default value of members that do have a default
	  value. Other minor fixes.
	* SoapReflectionImporter.cs, XmlReflectionImporter.cs: All maps must derive
	  from typeof(object) map, even those that have another base class.
	* XmlCustomFormatter.cs: Fixed generation of conversion from char to string.
	  It must serialize the char as number, not as character.
	* XmlSerializationReaderInterpreter.cs: Set the default value of members 
	  that do have a default value.
	* XmlTypeMapping.cs: Added property MembersWithDefault, which returns a list
	  of members that have a default value.

2004-03-15  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlSchemaImporter.cs: Import IXmlSerializable types as DataSet, like in MS.NET.
	  This fixes bug #55547.

2004-03-13  David Sheldon <dave-mono@earth.li>

  * XmlSerializationWriter.cs: Implement WriteElementStringRaw with a
   byte [].

2004-03-13  David Sheldon <dave-mono@earth.li>
 
  * XmlTextAttribute.cs: Initialise dataType with zero-length string. 
   fixes test case that tests for this directly.
  * TypeTranslator.cs: Check for new zero-length dataType so we don't reject
   it. Treat it as null.
   
2004-03-12  Lluis Sanchez Gual  <lluis@ximian.com>

	* CodeIdentifier.cs: Limit the length of identifiers.
	* MapCodeGenerator.cs: Do not generate base class if it is an XmlNode.
	  Generate types using GetDomType, so if the type is an array, it creates
	  the correct combination of types.
	* SerializationCodeGenerator.cs, XmlTypeMapping.cs: When trying to parse
	  an enum, if the string is empty and the enum has [Flags], then return 0
	  as value. This fixes bug #55509.
	* XmlSchemaImporter.cs: Added check for redefines of attribute groups. They
	  are not supported. Another check: a simple type cannot be enum if it does
	  not have any enum facet.
	  And another fix: use string as default type for attribtues.
	* XmlSchemas.cs: Fixed search for schema elements. An schema may import 
	  other schemas. An imported schema would not be in the table, but its
	  elements (although from another namespace) would be in the schema that 
	  imported it. So, we need know to check for every schema in the table.
	* XmlSerializer.cs: Added environment variable to help debugging code 
	  generator output.

2004-02-27  Lluis Sanchez Gual  <lluis@ximian.com>

	* MapCodeGenerator.cs: Added IncludeMetadata property, which returns a list
	  of XmlInclude attributes needed for the service class.
	  IsMapExported: Removed check for object type, since it can now be exported.
	  SetMapExported: Use the type name as key, since different importers may
	  be used to create a map for the same type.
	  GenerateClassInclude: Updated signature.
	* SoapCodeExporter.cs: Moved management of IncludeMetadata to MapCodeGenerator.
	  GenerateClassInclude(): Updated signature.
	* SoapReflectionImporter.cs: Support SoapIncludeAttribute in array members.
	  Implemented IncludeTypes.
	* XmlCodeExporter.cs: Moved management of IncludeMetadata to MapCodeGenerator.
	  GenerateClassInclude(): Updated signature.
	* XmlMemberMapping.cs: Added missing property.
	* XmlReflectionImporter.cs: GetReflectionMembers must be private.
	  Implemented IncludeTypes().
	* XmlSchemaExporter.cs: Added support for exporting typeof(object).
	* XmlSchemaImporter.cs: Changed the implementation of ImportDerivedTypeMapping.
	  Now, it does a regular import and then assign the required base class to
	  the imported map. In this way it is possible to assign a base type for a 
	  map that was previously imported without a base type.
	* XmlTypeMapping.cs: Added internal method SetRoot().

2004-02-24  Lluis Sanchez Gual  <lluis@ximian.com>

	* SerializationCodeGenerator.cs: Added support for generation of readers
	  and writers for several maps in a single class. Added support for
	  XmlMemberMapping. Fixed generation of serializers that use encoded format.
	* SoapAttributeAttribute.cs, SoapAttributeOverrides.cs, SoapAttributes.cs,
	  SoapElementAttribute.cs, SoapEnumAttribute.cs, SoapTypeAttribute.cs, 
	  XmlAnyElementAttribute.cs, XmlAnyElementAttributes.cs, XmlArrayAttribute.cs,
	  XmlArrayItemAttribute.cs, XmlArrayItemAttributes.cs, XmlAttributeAttribute.cs,
	  XmlAttributeOverrides.cs, XmlChoiceIdentifierAttribute.cs, XmlRootAttribute.cs,
	  XmlElementAttribute.cs, XmlElementAttributes.cs, XmlEnumAttribute.cs,
	  XmlReflectionMember.cs, XmlTextAttribute.cs, XmlTypeAttribute.cs:
	  Added InternalEquals method.
	* XmlAttributes.cs: Removed a lot of unused code. Added InternalEquals method.
	* SoapReflectionImporter.cs: Set SerializationSource to generated maps.
	* XmlCustomFormatter.cs: Fixed little bug.
	* XmlMapping.cs: Added Source property. This a global identifier of the map.
	* XmlReflectionImporter.cs: Set SerializationSource to generated maps.
	* XmlSchemaImporter.cs: Set the correct value for IsNillable when importing
	  mapping members.
	* XmlSerializationReaderInterpreter.cs, XmlSerializationWriter.cs: Minor fixes.
	* XmlSerializationWriterInterpreter.cs: WriteObject and WriteEnum were not
	  correctly used.
	* XmlSerializer.cs: Added support for generation of serializers.

2004-02-18  Atsushi Enomoto  <atsushi@ximian.com>

	* SerializationCodeGenerator.cs,
	  SerializationCodeGeneratorConfiguration.cs:
	  Added <namespaceImports> feature ("using XXX;" generation) support.

2004-02-17  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlSerializationWriter.cs: When writing the root element, use a prefix
	  if the namespace of the element is defined in the list of namespaces
	  provided to the XmlSerializer. This fixes bug #54427.

2004-02-16  Lluis Sanchez Gual  <lluis@ximian.com>

	* MapCodeGenerator.cs: Modified some methods to make them easier to reuse.
	  Those are basically methods to add custom attributes to element and
	  attribute members.
	* SoapCodeExporter.cs: Track changes in MapCodeGenerator.
	* XmlCodeExporter.cs: Better support for custom attribute generation for
	  method parameters.
	* XmlCustomFormatter.cs: Added null check.
	* XmlSchemaImporter.cs: do not set IsOptionalValueType property to 
	  attributes that are required.
	* XmlSerializationReaderInterpreter.cs: Method parameters may be serialized
	  as attributes.

2004-02-11  Lluis Sanchez Gual  <lluis@ximian.com>

	* MapCodeGenerator.cs: Changed some methods to make them easier to reuse.
	* TypeTranslator.cs: NMTOKENS, ENTITIES and IDREFS must be mapped to
	  string, not string[].
	* XmlCodeExporter.cs: AddMappingMetadata(): improved attribute generation
	  for array parameters. In general, improved generation of schema Form 
	  property.
	* XmlMemberMapping.cs: Added Form property.
	* XmlReflectionImporter.cs: Types that inherit from other types cannot be
	  simple types. Added a check for this.
	* XmlSchemaExporter.cs: several fixes: better generation of IsMixed and
	  Form. The key used to determine if a map has been already generated must
	  include the XmlType, since there can be two xml types with the same CLR
	  type and namespace (for example, they may differ in the Form property).
	* XmlSchemaImporter.cs: When getting the TypeData for a schema element,
	  also return the corresponding map. There can be two maps that have the
	  same TypeData, so given a TypeData is not always possible to get the
	  correct corresponding map (for example two arrays that only differ in the
	  Form of the item).
	* XmlTypeMapping.cs: Added method to set if a map can represent a simple
	  type or not.

2004-02-04  Lluis Sanchez Gual  <lluis@ximian.com>

	* TypeTranslator.cs, XmlCustomFormatter.cs: Added support for the
	  normalizedString schema type.

2004-02-04  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlReflectionImporter.cs: Get the class members using the right order.
	* XmlSerializationWriterInterpreter.cs: Removed unneeded code.
	  A member with the Any attribute can also contain text. Support this.
	* XmlTypeMapMemberElement.cs: Added CanBeText property.

2004-01-27  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlSchemaImporter.cs: Redefinition of types are not supported. Added a
	  check.

2004-01-27  Lluis Sanchez Gual  <lluis@ximian.com>

	* MapCodeGenerator.cs: Added helper method for generating an attribute
	  parameter of type enum.
	* XmlAttributeAttribute.cs: little fix.
	* XmlCodeExporter.cs: Support XmlAnyAttribute when generating attributes
	  for method parameters.
	* XmlMemberMapping.cs: Improved support for members of type "any".
	* XmlReflectionImporter.cs: Improved assignment of the attribute form.
	  If the namespace is explicitly specified, then the form should be
	  qualified. Also fixed issues with the namespace assigned to attributes.
	  This should fix bug #53384.
	* XmlSchemaExporter.cs: ExportMembersMapping(): improved support for
	  methods that return values of type "any". Changed the methods
	  AddSchemaArrayElement and AddSchemaElement, so instead of adding the
	  element, return it, and the caller must add it to the collection.
	  Other fixes in attribute generation.
	* XmlSchemaImporter.cs: ImportAnyType(): if a type name is provided,
	  generate the AnyType mapping from the type described in the schema.
	  Small fixes regarding IsMixed property of complex types (it means that
	  the type can contain text, so the XmlTextAttribute must be generated).
	* XmlSerializationReaderInterpreter.cs: Reading of members by-order must
	  be only used in the bare+encoded format.

2004-01-24  Lluis Sanchez Gual  <lluis@ximian.com>

	* SoapReflectionImporter.cs: Types included with SoapInclude don't need
	  to be derived types of the one that has the attribute.
	* XmlReflectionImporter.cs: Recursively register the derived maps of a given
	  map to the parent map. This fixes #53246.
	* XmlSerializationWriter.cs: Some fixes regarding empty namespaces.

2004-01-22  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlSerializationReaderInterpreter.cs: When deserializing an XmlElement,
	  do not check the root element name, since it can be any name. This fixes
	  bug #53201.

2004-01-20  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlReflectionImporter.cs: Throw exception if a value type member has the
	  IsNullable=true flag. This fixes bug #52906.

2004-01-20  Lluis Sanchez Gual  <lluis@ximian.com>

	* MapCodeGenerator.cs, XmlSchemaImporter.cs: Attributes are allways optional,
	  so a 'specified' member has always to be generated.
	* TypeData.cs: Fixed check for value type.

2004-01-20  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlSerializationReaderInterpreter.cs, XmlSerializationWriterInterpreter.cs,
	  XmlTypeMapMember.cs, MapCodeGenerator.cs, SoapCodeExporter.cs, TypeData.cs,
	  XmlCodeExporter.cs, XmlReflectionImporter.cs, XmlSchemaExporter.cs,
	  XmlSchemaImporter.cs, XmlSerializationReaderInterpreter.cs,
	  XmlSerializationWriterInterpreter.cs, XmlTypeMapMember.cs:
	  Added support for value specifiers members. This fixes bug #53024.

2004-01-20  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlSchemaExporter.cs: Don't create referenced element if it has already
	  been created (two types could be referencing the same schema element).

2004-01-19  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlReflectionImporter.cs: Read IsNullable flag from XmlArrayAttribute.
	* XmlSerializationWriterInterpreter.cs: Interpret IsNullable flag for
	  arrays. This fixes bug #53018.

2004-01-14  Lluis Sanchez Gual  <lluis@ximian.com>

	* MapCodeGenerator.cs: Use type namespace instead of root namespace as
	  default namespace for members.
	* XmlCodeExporter.cs: Fixed generation of XmlRootAttribute.
	* XmlReflectionImporter.cs: Fixed the assignment of root and type 
	  namespaces.
	* XmlSchemaExporter.cs: Use type namespace instead of root namespace as
	  default namespace for members. In AddSchemaElement, if the element is
	  a root element never use a "ref" attribute.
	* XmlSchemaImporter.cs: Fixed issue when importing root elements.

2004-01-13  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlReflectionImporter.cs, XmlSerializationWriterInterpreter.cs
	XmlTypeMapping.cs: more namespace fixes.

2004-01-13  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlReflectionImporter.cs: type namespace must never be used as root
	  namespace. This fixes bug #52772.

2004-01-08  Nick Drochak <ndrochak@ieee.org>

	* XmlSchemaImporter.cs: Removed unused variable.

2004-01-07  Lluis Sanchez Gual  <lluis@ximian.com>

	* XmlReflectionImporter.cs: Ignore Namespace property when applying
	  the [XmlType] attribute to an enum. This fixes bug #52607.

2003-12-19  Lluis Sanchez Gual  <lluis@ximian.com>

	* SerializationCodeGenerator.cs, XmlReflectionImporter.cs: Added internal
	option that allow serialization of private types.
	
2003-12-18 Eran Domb <erand@mainsoft.com>
	
	* TypeTranslator.cs : Change primtive types map.

2003-12-18 Eran Domb <erand@mainsoft.com>
	
	* XmlReflectionImporter.cs (ImportListMapping): Adding the included types of the list as a derived
	classes of object.

2003-12-15  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSchemaExporter.cs: AddSchemaElement, use XmlTypeMapElementInfo.IsPrimitive
	  to check if a type is primitive, instead of Type.IsPrimitive, since CLR
	  primitive types are not the same as XML primitive types. Patch proposed
	  by Mordechai Taitelman. This fixes bug #52228.
	* XmlSerializationWriter.cs: Fixes in WriteNullTagEncoded and WriteNullTagLiteral.

2003-12-15  Lluis Sanchez Gual <lluis@ximian.com>
	
	* XmlReflectionImporter.cs: Little fix.
	
2003-12-15  Lluis Sanchez Gual <lluis@ximian.com>
	
	* XmlReflectionImporter.cs: Type specified with XmlIncludeAttribute don't
	  need to be derived types of the includer. This fixes bug #52152.
	  Added null check for Name property of XmlEnumAttribute. This fixes
	  bug #52155.
	* XmlSerializationReader.cs: Fixed some error messages.
	* XmlSerializationReaderInterpreter.cs: Check that the root element has
	  the correct local name and namespace. This fixes bug #52038.
	  Throw exception if enum value can't be parsed.
	* XmlTypeMapping.cs: Don't try to parse numeric enum values. This fixes
	  bug #52041.
	
2003-12-12  Lluis Sanchez Gual <lluis@ximian.com>
	
	* MapCodeGenerator.cs: Added support for [Flags] enum.
	* XmlCodeExporter.cs: Do not add XmlElement attributes if the member is Any.
	* XmlSchemaImporter.cs: Implemented ImportAnyType(). Improved import of
	  encoded array type. Added support for enums with [Flags].
	  In encoded format, unqualified types are schema types by default.
	
2003-12-11  Lluis Sanchez Gual <lluis@ximian.com>
	
	* XmlCodeExporter.cs: Little fix.
	* XmlSchemaExporter.cs: In rpc format, make sure that parameters with the
	  same name have the same type.
	* XmlSchemaImporter.cs: Support xml:lang.
	* XmlSerializationReader.cs, XmlSerializationWriterInterpreter.cs: 
	  fixed wrong namespace for the arrayType attribute.

2003-12-08  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapReflectionImporter.cs, XmlMembersMapping.cs, XmlReflectionImporter.cs,
	  XmlSchemaImporter.cs, XmlTypeMapElementInfo.cs, XmlTypeMapping.cs:
	  When using rpc format on a web service, members don't need to have any
	  specific namespace. Added a flag for turning namespace check on/off.

2003-11-27  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationReader.cs: Generate identifiers for arrays user a counter.
	  delayedListFixups.Count cannot be used because elementes from
	  delayedListFixups are deleted sometimes.
	
2003-11-27  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlReflectionImporter.cs: Indexer properties must not be serialized.
	  This fixes bug #51060.

2003-11-24  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationWriterInterpreter.cs: Applied patch by Eran Domb: 
	  If type is Enum the code use type.GetElememtType() instead of 
	  Enum.GetUnderlyingType().

2003-11-12  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationReader.cs, XmlSerializationWriter.cs, XmlSerializer.cs:
	  Removed several TODOs already done.

2003-11-03  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlCustomFormatter.cs: Added support for anyUri type. This fixes
	  bug #50041.

2003-10-20  Lluis Sanchez Gual <lluis@ximian.com>

	* ReflectionHelper.cs: In CheckSerializableType() check that the type
	  is public.
	* XmlSerializationWriter.cs: Added check for circular references.
	  This fixes bug #49879.

2003-10-20  Lluis Sanchez Gual <lluis@ximian.com>

	* ReflectionHelper.cs: Added check in CheckSerializableType(). Interfaces
	  can't be serialized. This fixes bug #49878.
	* TypeData.cs: In ListItemType check that the collection has a valid
	  Add method and report an error if not.
	* XmlReflectionImporter.cs: Added CheckSerializableType check call when
	  reflecting a collection.

2003-10-18  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapReflectionImporter.cs: Support element references for enum values in
	  encoding format. This fixes bug #49568.
	* XmlSerializationReaderInterpreter.cs: In encoded format, do not check
	  the name and namespace of the wrapper element. MS.NET doesn't do it.
	  This fixes bug #49729.

2003-10-15  Lluis Sanchez Gual <lluis@ximian.com>

	* MapCodeGenerator.cs: Made MapCodeGenerator internal.

2003-10-15  Lluis Sanchez Gual <lluis@ximian.com>

	* MapCodeGenerator.cs: New file. Moved here all code that is common
	  between XmlCodeExporter and SoapCodeExporter.
	* SoapCodeExporter.cs: Implemented.
	* XmlCodeExporter.cs: Moved common code to MapCodeGenerator.
	* XmlSerializationReaderInterpreter.cs: Fixed problem when reading
	  encoded bare parameter list.
	* XmlTypeMapping.cs: Added method for getting member element by index.

2003-10-14  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlSchemas.cs : Implemented IsDataSet().

2003-10-13  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapCodeExporter.cs: Initial implementation of AddMappingMetadata().
	* SoapReflectionImporter.cs, XmlReflectionImporter.cs, XmlSchemaImporter.cs: 
	  in ImportMembersMapping, set pass the namespace to each XmlMemberMapping.
	* SoapSchemaExporter.cs: Some fixes in ExportMembersMapping.
	* XmlMemberMapping.cs: Fixed constructor. Now it takes the default namespace
	  and whether it uses encoded or literal format.
	* XmlSchemaExporter.cs: Little fixes.

2003-10-10  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationReader.cs. Fixed bug #49510. An array element doesn't
	  need to be of type SOAP-ENC:Array, it can be a restriction of it.

2003-10-10  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapReflectionImporter.cs, XmlReflectionImporter.cs: Fixed bug #49476.
	  Read only properties are only serialized if the type is an array.

2003-10-09  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapReflectionImporter.cs, XmlReflectionImporter.cs, 
	  SoapReflectionImporter.cs: Fixed bug #94694. Check for public constructor
	  is not needed for value types.

2003-10-08  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializer.cs, XmlSerializationWriter.cs: Fixed bug #49353
	  (XmlSerializer.Serialize() handles namespace parameter incorrectly)

2003-10-05  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlReflectionImporter.cs, SoapReflectionImporter.cs: Fixed bug #49349

2003-10-04  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSchemaExporter.cs: Keep track of elements being exported.
	* XmlSchemas.cs: Removed unneeded catch.

2003-10-01  Lluis Sanchez Gual <lluis@ximian.com>

	* SerializationCodeGenerator.cs, XmlSerializationReaderInterpreter.cs: 
	  Fixed handling of members with XmlTextAttribute that are arrays.
	* TypeData.cs: IsComplexType now returns true for XmlNode.
	* XmlSerializer.cs: Added check for null mapping in FromMappings.
	* XmlTypeMapping.cs: Added helper method FindTextElement.

2003-09-28  Lluis Sanchez Gual <lluis@ximian.com>
	
	* SoapReflectionImporter.cs, XmlReflectionImporter.cs, XmlSchemaExporter.cs:
	  Added support for IncludeInSchema flag.
	* SoapSchemaImporter.cs: Implemented ImportDerivedTypeMapping method.
	* XmlCodeExporter.cs: Implemented AddMappingMetadata and AddMappingMetadata
	  methods. Added support for IncludeInSchema flag.
	* XmlSchemaImporter.cs: Implemented ImportDerivedTypeMapping method.
	  Added support for IncludeInSchema flag.
	* XmlTypeAttribute.cs: Set includeInSchema to true by default.
	* XmlTypeMapping.cs: Added IncludeInSchema property.
	
2003-09-25  Lluis Sanchez Gual <lluis@ximian.com>
	
	* SoapIncludeAttribute.cs: Added AllowMultiple option. This fixes bug #48877.

2003-09-14  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlCustomFormatter.cs: added support for additional string types in
	  GenerateToXmlString().
	* XmlSchemaExporter.cs: Fixed generation of XmlMembersMapping using 
	  encoded format.

2003-09-11  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapSchemaImporter.cs: implemented.
	* XmlReflectionImporter.cs: Changed nullable default for array items to true.
	* XmlSchemaExporter.cs: Some fixes in the generation of encoded format schema.
	* XmlSchemaImporter.cs: more support for encoded format.

2003-09-04  Lluis Sanchez Gual <lluis@ximian.com>

	* SerializationCodeGenerator.cs: Minor fixes.
	* SoapReflectionImporter.cs: More fixes.
	* SoapSchemaExporter.cs: implemented.
	* SoapSchemaImporter.cs: Initial implementation.
	* TypeTranslator.cs: new methods for dealing with encoded arrays: GetArrayName
	  and ParseArrayType
	* XmlCodeExporter.cs: Fix. When exporting a map, export all derived maps.
	* XmlMemberMapping.cs: Minor fixes.
	* XmlMembersMapping.cs: added some convenient constructors.
	* XmlSchemaExporter.cs: Added support for encoded format.
	* XmlSchemaImporter.cs: Added support for encoded format. 
	* XmlSerializationReader.cs: changed some string literals by constants.
	  Implemented ParseWsdlArrayType.
	* XmlSerializationReaderInterpreter.cs: Read typeArray attribute when serializing
	  custom attributes.
	* XmlSerializationWriter.cs: Implemented WriteXmlAttribute.
	* XmlSerializationWriterInterpreter.cs: Use WriteXmlAttribute instead of
	  WriteAttribute to write custom attributes.
	* XmlSerializer.cs: added some namespace constants.
	* XmlTypeMapping.cs: added GetSchemaArrayName method.

2003-09-01  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSchemaImporter.cs: Implemented ImportMembersMapping.
	* XmlTypeMapMemberElement.cs: Little fix.
	* XmlTypeMapping.cs: Added AllElementInfos property in ClassMap.
	* XmlCustomFormatter.cs: Added GenerateToXmlString and GenerateFromXmlString
	  methods.
	* SerializationCodeGenerator.cs, SerializationCodeGeneratorConfiguration.cs:
	  Added.

2003-08-29  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapReflectionImporter.cs: Fixed construcion of XmlMemberMapping.
	* XmlMemberMapping.cs: Changed constructor.
	* XmlReflectionImporter.cs: Fixed construcion of XmlMemberMapping.
	* XmlSchemaImporter.cs: Implemented ImportMembersMapping().
	* XmlSerializationReaderInterpreter.cs: Added some helper methods. Changed visibility.
	* XmlSerializationWriterInterpreter.cs: Changed visibility.

2003-08-28  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializer.cs: Fix in Deserialize() method.

2003-08-28  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlReflectionImporter.cs: Fill RelatedMaps property of the generated map.
	* XmlSchemas.cs: Find method: make sure the returned object belongs to
	  the requested type.
	* XmlSerializationReader.cs: Removed unneded virtual ReadObject method.
	  Add null checks for eventSource.
	* XmlSerializationReaderInterpreter.cs: ReadObject is not virtual any more.
	* XmlSerializationWriter.cs: In Initialize method, initialize the provided
	  namespece declarations. Virtual method WriteObject not needed any more.
	  In WriteStartElement, write the provided namespaces.
	* XmlSerializationWriterInterpreter.cs: Write object is not virtual any more.
	  Added GetTypeMap method, that returns the map for a given type. Added some
	  virtual methods, so writer behavior can be extended at several places by
	  derived classes.
	* XmlSerializer.cs: Changed behavior to match what MS.NET does. The virtual 
	  methods CreateReader and CreateWriter are not called unless no type or 
	  type mapping was provided in the constructor.

2003-08-12  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSchemaImporter.cs: ImportTypeMapping doesn't need to check if the
	  schema type it is importing is a class or an array. It will always
	  be a class.

2003-08-12  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationWriterInterpreter.cs: any element members can be serialized
	  as text nodes. Support it.

2003-08-05  Lluis Sanchez Gual <lluis@ximian.com>

	* CodeIdentifier.cs: Fixed MakeValid method.
	* TypeTranslator.cs: Added support for more primitive types. Added
	  GetDefaultPrimitiveTypeData, which returns the type data to which a clr type
	  maps by default.
	* XmlCodeExporter.cs: Generate XmlRoot attribute only if root element name and ns
	  are different from the type ns and name.
	  Generate class and field comments.
	  Fixed default attribute generation. In elements with ref attribute, it has to be
	  generated in the referred attribute.
	* XmlReflectionImporter.cs: Added check: simple type extensions can't add new elements.
	  Added suport for text nodes in members of type "any".
	* XmlSchemaExporter.cs: Several fixes. Fixed generation of complex types with simple
	  content.
	* XmlSchemaImporter.cs: Several fixes. The importer now collects documentation info.
	* XmlSerializationWriter.cs: WriteNamespaceDeclarations(): do not declare namespaces
	  that have already been declared.
	  WriteStartElement(): elements from schema namespace are always written with ns prefix.
	* XmlTypeMapMember.cs: Added documentation property.
	* XmlTypeMapping.cs: Added documentation property. Added property to check if a class map
	  represents a simple type.

2003-08-05  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSchemaImporter.cs: Implemented ImportTypeMapping and all needed parsing
	  stuff.
	* SoapReflectionImporter.cs: Set the type namespace parameter when creating a map.
	* TypeData.cs: Added property that returns a TypeData that represents an array of
	  the given TypeData.
	* TypeTranslator.cs: Added GetArrayName() method.
	  Added TypeDatas for missing primitive types.
	* XmlCodeExporter.cs: Implemented ExportMembersMapping. Fixed generation of
	  XmlRootAttribute. Added the namespace to all attributes being generated.
	  Other fixes in the generation of code.
	* XmlReflectionImporter: store the namespace of the type in the maps.
	* XmlSchemaExporter.cs: Several fixes. Only set the "mixed" attribute if the
	  class can generate text. Do not export inherited attributes of a class.
	  Use the new root namespace stored in the map when generating the root element.
	* XmlSerializationWriter: Always write a prefix when writing a qname, even if the
	  namespace is the default namespace.
	* XmlSerializationWriterInterpreter.cs: fixed missing "else".
	* XmlTypeMapElementInfo.cs: In DataTypeNamespace property, return the type
	  namespace instead of the map namespace (which can be different if the type
	  has a XmlRoot element).
	* XmlTypeMapMember.cs: Set the default value of the DefaultValue property
	  to System.DBNull.Value.
	* XmlTypeMapMemberElement.cs: ElementInfo property: In the getter Create
	  the collection if it has not yet been created.
	* XmlTypeMapping.cs: Added property XmlTypeNamespace which stores the namespace
	  of the type. It may be different from the namespace of the map if the type
	  has a XmlRoot element. Also added IsSimpleType property.
	  In ClassMap, added AllMembers property.
	
2003-07-30  Lluis Sanchez Gual <lluis@ximian.com>

	* TypeData.cs: Added new constructor and variables to allow the creation of
	  a TypeData without a Type. Added ListItemTypeData property.
	* XmlTypeMapping.cs: Added property for checking if a ListMap represents an
	  array of arrays. Added also a property to get the nested array map.
	* XmlCodeExporter.cs: First implementation of code exporter.

2003-07-22  Lluis Sanchez Gual <lluis@ximian.com>

	* TypeTranslator.cs: Added new primitive types: NMTOKEN and NCName.
	* XmlSerializationWriterInterpreter.cs: Write XmlAttributes with the prefix
	  they have.

2003-07-15  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapReflectionImporter.cs, XmlReflectionImporter.cs: Avoid generating two
	  maps with the same name and namespace. To avoid this, maps must be registered
	  using the real map namespace, not the default namespace (the namespace can
	  change if the type has a XmlType or SoapType attribute).
	* XmlArrayItemAttribute.cs: Set IsNullable to true by default.
	* XmlSchemaExporter.cs: Implemented method ExportMembersMapping.
	  Other small fixes.
	* XmlSerializationWriterInterpreter.cs: GetStringValue: return null if the value
	  is null.

2003-07-14  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapReflectionImporter.cs: Set the BaseMap property of map. Small fix.
	* TypeData.cs: IsComplexType now returns true for IXmlSerializable types.
	* XmlAttributes.cs: Fixed bug when reading the value of DefaultValueAttribute.
	* XmlReflectionImporter.cs: Set the BaseMap property of map. Several small fixes.
	* XmlSchemaExporter.cs: Implemented.
	* XmlSchemas.cs: Support schemas with TargetNamespace set to null.
	* XmlSerializationWriter.cs: FromXmlQualifiedName (): return null if the qname is null.
	  GetNamespacePrefix (): no need to add xmlns attribute if namespace is null.
	* XmlSerializationWriterInterpreter.cs: Fixed management of default values.
	  GetStringValue() returns null if the value is null, instead of empty string.
	  (attributes with null values are not written).
	* XmlTypeMapElementInfo.cs: added IsTextElement and IsUnnamedAnyElement properties.
	* XmlTypeMapMemberAttribute.cs: added DataTypeNamespace and removed DataType.
	  DataType value can is now in TypeData.
	* XmlTypeMapMemberElement.cs: Small fix.
	* XmlTypeMapping.cs: Added FindMember method and BaseMap property.

2003-07-14  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* AssemblyInfo.cs: Removed

2003-07-9  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationWriter.cs: WriteStartElement(): Do not write xsd and xsi 
	  namespace declarations if they have already been defined.

2003-07-2  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationReaderInterpreter.cs: Use the parameter type when getting the Add method
	  for adding elements to a list.

2003-06-31  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapReflectionImporter.cs, XmlReflectionImporter.cs: Fixed so XmlIncludeAttribute and 
	  SoapIncludeAttribute are now transitive (if class A includes class B, and B includes C, then 
	  A includes C).

2003-06-30  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapReflectionImporter.cs, XmlReflectionImporter.cs, XmlTypeMapping.cs: 
	  Added support for serialization of enums with the Flags attribute.

2003-06-30  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapReflectionImporter.cs: Fix support for DataType in class members.
	* TypeData.cs: Don't use "Index" name to get indexer property. Indexer properties
	  can have other names.
	* TypeTranslator.cs, XmlCustomFormatter.cs: Added support for "time" and "data" xml types.
	* XmlReflectionImporter.cs, XmlTypeMapElementInfo.cs, XmlSerializationReader.cs,
	  XmlSerializationWriter.cs, XmlTypeMapElementInfo.cs, XmlTypeMapping.cs: 
	  Fix support for DataType in class members.
	* XmlSerializationReaderInterpreter.cs, XmlSerializationWriterInterpreter.cs: 
	  Added support for array of primitive types in attributes.

2003-06-28  Lluis Sanchez Gual <lluis@ximian.com>

	* TypeData.cs: Type of item of ICollections is now taken from the Item(int) property. Add() can
	  be overlodaded, so it is not good for this.
	* XmlSerializationWriterInterpreter.cs: Fix ambiguity bug when getting Item property of a collection.

2003-06-24  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlTypeMapElementInfo.cs: no need to compare nesting level in Equals.
	* XmlReflectionImporter.cs: Changed nullable default. Assign member's namespace to an
	  array if the namespace is not specified in XmlArrayItemAttribute.

2003-06-17  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlReflectionImporter.cs: Reset internal tables for each ImportMembersMapping call.
	* XmlSerializationReader.cs: GetXsiType(): use current reader.namespaceUri if namespace
	  is not specified in the xsi attribute.
	* XmlSerializationReaderInterpreter.cs: Fixed bug when reading an empty array from an empty element.
	* XmlSerializationWriterInterpreter.cs: Added null value check when writting an array.
	
2003-06-16  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlSerializationReader.cs : Synchronous fix with 
	  XmlElement.GetAttribute(name, ns) fix for GetNullAttr().
	* added XmlTypeMapMemberNamespace.cs.
	* XmlReflectionImporter,
	  XmlSerializationReaderInterpreter.cs,
	  XmlSerializationWriterInterpreter.cs,
	  XmlTypeMapping.cs : support for XmlNamespaceDeclarationAttribute.

2003-06-16  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlSerializationWriter.cs : some QName handling fix.

2003-06-13  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationReader.cs: Fixed error message.
	* XmlSerializationReaderInterpreter.cs: Fixed bug when reading XmlQualifiedNames as attributes
	  Thanks to Atsushi!
	* XmlSerializationWriter.cs: Null check in FromXmlQualifiedName.

2003-06-13  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationReader.cs: Fixed implementation of ReadElementQualifiedName() and ReadTypedPrimitive().
	* XmlSerializationReaderInterpreter.cs: Improved serialization of XmlQualifiedNames.
	* XmlSerializationWriter.cs: implemented methods for reading XmlQualifiedNames.
	* XmlSerializationWriterInterpreter.cs: Improved deserialization of XmlQualifiedNames.

2003-06-13  Lluis Sanchez Gual <lluis@ximian.com>

	* SchemaTypes.cs: Changed DataSet type for a more generic XmlSerializable.
	* SoapReflectionImporter.cs: tiny fix.
	* XmlReflectionImporter.cs, TypeData.cs, XmlSerializationWriterInterpreter.cs,
	  XmlSerializationReaderInterpreter.cs: Added support for IXmlSerializable.
	* XmlSerializationReader.cs: Fixed implementation of ReadSerializable().
	* XmlSerializationWriter.cs: implemented WriteSerializable ().

2003-06-12  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlAnyElementAttribute.cs, XmlArrayItemAttribute.cs: Added AllowMultiple flag.
	* XmlReflectionImporter.cs, XmlSerializationWriterInterpreter.cs,
	  XmlSerializationReaderInterpreter.cs, XmlTypeMapElementInfo.cs,
	  XmlTypeMapMemberElement.cs, XmlTypeMapping.cs: Added support for XmlTextAttribute.
	* XmlSerializationWriter.cs: small fix.

2003-06-11  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlReflectionImporter.cs: Added support for XmlIgnoreAttribute in enum members.
	  Added support for DefaultValueAttribute.
	* XmlSerializationWriterInterpreter.cs: Added support for DefaultValueAttribute. Fixed bug when writting
	  the value of an enum.
	* XmlTypeMapMember.cs: Added DefaultValue attribute.
	* XmlTypeMapping.cs: EnumMap.GetXmlName and GetXmlValue, so they can now deal with
	  integer values.

2003-06-11  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationReader.cs: Minor fix.

2003-06-11  Lluis Sanchez Gual <lluis@ximian.com>

	* XmlSerializationReader.cs, XmlSerializationReaderInterpreter.cs: Minor fixes.

2003-06-10  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapReflectionImporter.cs: Added check: some overrides cannot be applied to primitive types.
	* XmlAttributes.cs: Default value of XmlDefaultValue changed to System.DBNull.Value
	* XmlCustomFormatter.cs: small fixes.
	* XmlReflectionImporter.cs: Added check: some overrides cannot be applied to primitive types.
	* XmlSerializationWriter.cs: Implemented TopLevelElement().
	  WriteNamespaceDeclarations(): Fixed (the hashtable contains XmlQualifiedNames, not strings).
	  WriteXsiType(): It is not necessary to add the namespace declaration, this will now be done by XmlWriter.
	* XmlSerializationWriterInterpreter.cs: Call TopLevelElement() when writing classes or arrays as
	  root elements.

2003-06-05  Lluis Sanchez Gual <lluis@ximian.com>

	* SoapReflectionImporter.cs: implemented.
	* TypeTranslator.cs: added IsPrimitive() method
	* TypeMapping.cs: Added RelatedMaps property that returns all maps directly or indirectly
	  used by that one. Also added Format property, that can be literal or encoded.
	* XmlReflectionImporter.cs: little fixes. Moved some methods to ReflectionHelper.
	* XmlReflectionMember.cs: added constructor that accepts SoapAttributes
	* XmlSerializationReader.cs: implemented many methods needed to support encoded format.
	* XmlSerializationReaderInterpreter.cs: added support for encoded format.
	* XmlSerializationWriter.cs: added support for encoded format.
	* XmlSerializationWriterInterpreter.cs: added support for encoded format.
	* XmlTypeMapElementInfo.cs: added some properties needed to support encoded format
	* XmlTypeMapMemberAttribute.cs: added MappedType property (enum values can be attributes, 
	  and a map is needed for them).
	* XmlTypeMapMemberElement.cs: small fixes.
	* XmlTypeMapping.cs: added some properties and methods needed to support encoded format
	* ReflectionHelper.cs: added. Has some methods shared by the reflection importers.

2003-06-01  Miguel de Icaza  <miguel@ximian.com>

	* XmlSerializationReader.cs (UnknownAttribute, UnknownNode,
	UnknownElement): Add line number information.

2003-05-29  Lluis Sanchez Gual <lluis@ximian.com>

	* TypeData.cs, TypeTranslator.cs: Renamed some properties.
	* XmlCustomFormatter.cs: Fixed bug in serialization of chars. Support for byte[].
	* XmlMapping.cs: Added internal property.
	* XmlMemberMapping.cs, XmlMembersMapping.cs: Implemented.
	* XmlReflectionImporter.cs: Implemented importing of XmlMembersMapping. Several fixes.
	* XmlReflectionMember.cs: XmlAttributes are now created by default
	* XmlSerializationReader.cs, XmlSerializationWriter.cs: Several fixes.
	* XmlSerializationReaderInterpreter.cs, XmlSerializationWriterInterpreter.cs, XmlSerializer.cs: 
	  Implemented support for XmlMembersMapping.
	* XmlTypeMapping.cs: Property ObjectMap moved to XmlMapping.

2003-05-28  Lluis Sanchez Gual <lluis@ximian.com>

	* TypeData.cs, TypeTranslator.cs: Added support for enums. Added method for translating
	  from xml type to clr type.
	* XmlCustomFormatter.cs: Fixed bug in serialization of chars. Support for byte[].
	* XmlReflectionMember.cs: Added default constructor.
	* XmlSerializationReader.cs: Implemented ReadTypedPrimitive(), ToByteArrayBase64().
	* XmlSerializationWriter.cs: Several fixes.
	* XmlSerializationReaderInterpreter.cs, XmlReflectionImporter.cs, XmlSerializationWriterInterpreter.cs
	  XmlTypeMapMember.cs, XmlTypeMapMemberElement.cs, XmlTypeMapping.cs:
	  Added support for enums. Added support for XmlElement and XmlNode.
	  Support for XmlAnyAttributeAttribute and XmlAnyElementAttribute. Many fixes.

2003-05-26  Lluis Sanchez Gual <lluis@ximian.com>

	* TypeData.cs, TypeTranslator.cs: Implemented some methods.
	* XmlCustomFormatter.cs: Added formatting methods.
	* XmlReflectionImporter.cs, XmlSerializer.cs: New implementation.
	* XmlReflectionMember.cs: Added new constructor.
	* XmlSerializationReader.cs, XmlSerializationWriter.cs: Implemented some methods.
	* XmlSerializationWriterInterpreter.cs, XmlSerializationReaderInterpreter.cs
	  XmlTypeMapElementInfo.cs, XmlTypeMapMember.cs, XmlTypeMapMemberAttribute.cs
	  XmlTypeMapMemberElement.cs, XmlTypeMapping.cs: Added

2003-05-10  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* Added TypeTableEntry.cs.
	* TypeTranslator.cs : changed for non-static use.
	* XmlAttributes.cs : XmlType attribute support for GetAttributeName() 
	  and GetElementName(). Bugfix so that if any XmlElementAttribute 
	  exists after non-typed XmlElementAttribute then it might be ignored.
	  Added GetElementIsNullable().
	* XmlSerializer.cs :
	  Introduced TypeTablePool and TypeTableEntry and erased ambiguous 
	  Object memberObj[4].
	  Deserialize() now uses XmlReader.Depth to check its depth.
	  Serialize() for non-XmlReader arguments now always write xmldecl.
	  SerializeBuiltin() now explicitly requires Type to support xsi:nil,
	  and handles XmlQualifiedName.
	  Separated SerializeType () from Serialize().
	  Separated WriteCollectionElementMember(), IsFieldTypeSerializable(),
	  IsPropertyTypeSerializable() from SerializeMembers().
	  SerializeMembers() is now capable of null value and actual type,
	  which should be included by XmlIncludeAttribute and so on.
	  Renamed SerializeArray() to SerializeArrayContent(), and added
	  SerializeCollectionContent().
	  SerializeMembers() now requries XmlSerializerNamespaces (not used yet).
	  FillTypeTable() is now aware of XmlInclude attributes.
	  FillEnum() should not have different type table content from others.

2003-05-09  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlSerializer.cs : this time, only replaced spaces with tabs.

2003-05-05  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* ChangeLog : Added missing ChangeLog of 2003-04-25.
	* XmlCustomFormatter.cs : Fixed FromXmlNmTokens() to contain 
	  separators. Added experimental method ToEnum().
	* XmlSerializationReader.cs : unconfirmed implementation of
	  ReadSerializable() and ToEnum().
	* XmlSerializationWriter.cs : fixed WriteAttribute() so that if value 
	  is null then no output will be written.
	  Fixed WriteStartElement(), WriteElement*() and WriteEmptyTag() 
	  to use custom formatted name.

2003-05-02  Miguel de Icaza  <miguel@ximian.com>

	* XmlReflectionImporter.cs: one of theImportTypeMapping mappings
	had a void return value.

2003-04-26  Miguel de Icaza  <miguel@ximian.com>

	* XmlIncludeAttribute.cs: Make XmlIncludeAttribute have the
	`AllowMultiple' flags.  

2003-04-25  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* TypeTranslator.cs : patch by Erik LeBel. Array consideration.
	* XmlReflectionImporter.cs : patch by Erik LeBel. 
	  Now uses XmlRootAttribute to determine element name.

2003-03-17  Miguel de Icaza  <miguel@ximian.com>

	* XmlSerializer.cs: Do not use Bubblesort, use ArrayList.Sort.
	Kill Bublesort.

2003-03-22  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlSerializer.cs : patch by Sean Cier. Serialize() other than 
	  XmlWriter argument should call WriteEndDocument.

2003-03-19  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlSerializer.cs : Serialize() don't write xmldecl when WriteState is
	  not WriteState.Start, and never call WriteEndDocument().

2003-03-12  Elan Feingold <efeingold@mn.rr.com>

	* XmlCustomFormatter.cs: Correct signature, Implement
	ToByteArrayBase64 

	* XmlSerializationWriter.cs: Fix prototype.

	* XmlSerializer.cs: Implements Deserialize().

2003-02-16  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlSerializer.cs : serializing now works for interface member.

2003-01-26  Atsushi Enomoto <ginga@kit.hi-ho.ne.jp>

	* XmlSerializer.cs : some fix handling xml node object more correct.

2003-01-16  Ajay kumar Dwivedi <adwiv@yahoo.com>
	* XmlSerializer.cs: Array serialization for 1D arrays works
	* TypeTranslator: Added for translations`

2002-09-19  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlCustomFormatter.cs: finished.
	* XmlSerializationReader.cs: implemented some more methods.

2002-09-18  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* XmlSerializationReader.cs: implemented a few methods.

	* XmlAnyElementAttribute.cs:
	* XmlArrayAttribute.cs:
	* XmlChoiceIdentifierAttribute.cs:
	* XmlElementAttribute.cs:
	* XmlMemberMapping.cs:
	* XmlMembersMapping.cs: class status based fixes.

2002-09-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CodeIdentifiers.cs:
	* XmlSchemaExporter.cs:
	* XmlSchemaImporter.cs:
	* XmlSchemas.cs:
	* XmlSerializationWriteCallback.cs:
	* XmlSerializationWriter.cs:
	* XmlSerializer.cs:
	* XmlSerializerNamespaces.cs: some class status based fixed and
	implemented a couple of methods.

	* SoapSchemaExporter.cs: stubbed out.

2002-08-24  Tim Coleman <tim@timcoleman.com>
	* SoapCodeExporter.cs:
		Fix return value of ExportTypeMapping.
	* XmlCustomFormatter.cs:
		Change methods to be internal instead of public.
	* XmlSerializationWriter.cs:
		Modify GetPrimitiveTypeName to build on linux.
		Modify GetQualifiedName to return an incrementing prefix
		instead of the same one all the time (still need to manage
		conflicts)
		Modify WriteElementString to only do special stuff is XsiType
		is not defined.
		Modify WriteTypedPrimitive to use FromXmlQualifiedName if it's
		an XmlQualifiedName.

2002-08-22  Tim Coleman <tim@timcoleman.com>
	* XmlSerializationReader.cs:
		Some implementation
	* XmlSerializationWriter.cs:
		More implementation
	* XmlCustomFormatter.cs:
		Implemented this class.

2002-08-20  Tim Coleman <tim@timcoleman.com>
	* XmlSerializationWriter.cs:
		Some implementation.

2002-08-19  Tim Coleman <tim@timcoleman.com>
	* XmlSerializer.cs:
		New stubs added.
	* XmlSerializationWriter.cs:
		New stubs added.

2002-08-14  Tim Coleman <tim@timcoleman.com>
	* XmlSerializer.cs:
		More reformatting of source code so I can
		better understand what it does.

2002-08-06  Tim Coleman <tim@timcoleman.com>
	* XmlSerializer.cs:
		Some reformatting of code for readability.
		Modify to correctly serialize ICollection objects
		such as the BindingCollection of a ServiceDescription
		for example.

2002-08-03  Tim Coleman <tim@timcoleman.com>
	* XmlSerializer.cs: 
		Changed Implements() to check based on name rather
		than FullName.  FullName was never working correctly.

2002-07-26  Tim Coleman <tim@timcoleman.com>
	* XmlSerializer.cs:
		The constructor now looks for an XmlRootAttribute attribute
		if one is not passed in.  Various changes to make it emit
		proper XML, such as handling an element without a namespace
		prefix, and using WriteEndDocument where it should be.

2002-07-24  Tim Coleman <tim@timcoleman.com>
	* CodeIdentifier.cs:
	* IXmlSerializable.cs:
	* XmlSerializationCollectionFixupCallback.cs:
	* XmlSerializationFixupCallback.cs:
	* XmlSerializationReadCallback.cs:
	* XmlSerializationReader.cs:
	* XmlSerializationWriteCallback.cs:
		Add new classes.
	* XmlSchemas.cs
	* CodeIdentifiers.cs:
		Implement some of these classes
	* XmlCodeExporter.cs:
		Fix return type of a function

2002-07-24  Tim Coleman <tim@timcoleman.com>
	* SoapReflectionImporter.cs:
		New class added to build
		System.Web.Services.Description.ServiceDescription.cs

2002-07-22  Tim Coleman <tim@timcoleman.com>
	* CodeIdentifiers.cs:
	* SoapCodeExporter.cs:
	* SoapSchemaExporter.cs:
	* XmlCodeExporter.cs:
	* XmlMemberMapping.cs:
	* XmlMembersMapping.cs:
	* XmlReflectionImporter.cs:
	* XmlReflectionMember.cs:
	* XmlSchemaExporter.cs:
	* XmlSchemaImporter.cs:
	* XmlSchemas.cs: 
		New stubbs added to aid in the linux build of
		System.Web.Services.

2002-07-05  Ajay kumar Dwivedi <adwiv@yahoo.com>
	
	* XmlSeriailizer: Serialize method can serialize XmlSchema perfectly.

	* XmlSerializerNamespaces: Reverted to use of a single Hashtable.

2002-07-02  Ajay kumar Dwivedi <adwiv@yahoo.com>
	
	* XmlSeriailizer: Updated Serialize() method.

2002-06-27 Ajay kumar Dwivedi <adwiv@yahoo.com>
	* XmlSerializer: Serialize() method Partially Implemented.

2002-06-20 Ajay kumar Dwivedi <adwiv@yahoo.com>

	* Soap & XmlOverrides: Implemented using TypeMember as key with
	  suggestions from Rafael.
