/*
 * Translatable strings file generated by Glade.
 * Add this file to your project's POTFILES.in.
 * DO NOT compile it as part of your application.
 */

gchar *s = N_("Save Changes?");
gchar *s = N_("\n"
              "Settings have been changed.\n"
              "\n"
              "Do you want to save the changes?\n"
              "");
gchar *s = N_("Yes");
gchar *s = N_("No");
gchar *s = N_("Help");
gchar *s = N_("OK");
gchar *s = N_("General Settings\n"
              "\n"
              "Info:\n"
              "\tFree form informational string,\n"
              "\thas no function.\n"
              "\n"
              "ESSID:\n"
              "\tNetwork name, sometimes also\n"
              "\tcalled Domain ID.\n"
              "\tIdentifies your network, most\n"
              "\tWLAN cards get this\n"
              "\tautomatically from the access\n"
              "\tpoint in managed mode, other\n"
              "\tcards require to specify a name.\n"
              "\tIn Ad-Hoc mode the same name\n"
              "\tshould be spcified on all\n"
              "\tparticipating nodes.\n"
              "NWID:\n"
              "\tNetwork ID, specifies nodes\n"
              "\tbelonging to the same cell.\n"
              "Mode:\n"
              "\tValid choices are:\n"
              "\tAd-Hoc\n"
              "\t\tSometimes also called\n"
              "\t\tDemo mode, nodes\n"
              "\t\twithout access point\n"
              "\tManaged\n"
              "\t\tManaged network with\n"
              "\t\taccess point\n"
              "\tMaster\n"
              "\t\tThe nodes acts as master or\n"
              "\t\taccess point, not supported\n"
              "\t\tby all cards.\n"
              "\tRepeater\n"
              "\t\tThe node acts as packet\n"
              "\t\tforwarder, not supported\n"
              "\t\tby all cards.\n"
              "\tSecondary\n"
              "\t\tThe node acts as secondary\n"
              "\t\tor backup master, not\n"
              "\t\tsupported by all cards.\n"
              "\tAuto\n"
              "\t\tTry to automatically\n"
              "\t\tdetermine operation mode\n"
              "\t\tor use card's default mode.");
gchar *s = N_("Help");
gchar *s = N_("OK");
gchar *s = N_("RF Parameters\n"
              "\n"
              "Channel specification\n"
              "\tThe WaveLAN frequency band is\n"
              "\tfrom 2.4GHz up to 2.4836GHz\n"
              "\tis devided into up to 14\n"
              "\tchannels. Not all cards support\n"
              "\tall channels.\n"
              "\tFor Ad-Hoc mode a fixed\n"
              "\tcommon channel / freqency for\n"
              "\tthe participating nodes has to be\n"
              "\tspecified. For some access\n"
              "\tpoint - card combinations it can\n"
              "\tbe necessary to specify the\n"
              "\taccess point's control channel\n"
              "\there.\n"
              "\tThe channel can be either\n"
              "\tspecified by it's frequency or\n"
              "\tchannel number.\n"
              "\n"
              "Rate\n"
              "\tSpecifies the transmission rate,\n"
              "\tdepending on the card\n"
              "\t1MBit/sec, or 11MBit/sec are\n"
              "\tsupported. Auto selects the\n"
              "\tcard's default rate.");
gchar *s = N_("Help");
gchar *s = N_("OK");
gchar *s = N_("WEP Encryption\n"
              "\n"
              "Encryption\n"
              "\tOn - Enable link encryption\n"
              "\tOff - Disable link encryption\n"
              "\n"
              "Mode\n"
              "\tOpen\n"
              "\t\tAlso accept not encrypted\n"
              "\t\tdata packets\n"
              "\tRestricted\n"
              "\t\tOnly accept correctly encrypted\n"
              "\t\tdata packets");
gchar *s = N_("Help");
gchar *s = N_("OK");
gchar *s = N_("Encryption Keys\n"
              "\n"
              "Encryption keys can be specified\n"
              "either as HEX encoded strings\n"
              "like\n"
              "\t0123-4567-89\n"
              "or\n"
              "\t0a2d46ff3c\n"
              "or as simple strings which will be\n"
              "converted to numerical keys\n"
              "automatically.\n"
              "\n"
              "Up to 4 different keys can be\n"
              "configured but only one of them\n"
              "can be active at a time.");
gchar *s = N_("Help");
gchar *s = N_("OK");
gchar *s = N_("Expert settings\n"
              "\n"
              "All WLAN settings are performed\n"
              "through two utility programs\n"
              "called \"iwconfig\" and \"iwpriv\".\n"
              "Those utilities provide even more\n"
              "options than are usually necessary\n"
              "to get your WLAN up and running.\n"
              "If one of those seldomly options\n"
              "has to be used it can be specified\n"
              "here as it would be on the utilitie's\n"
              "commandline.\n"
              "\n"
              "For example some Orinico based\n"
              "need an extra iwpriv option to\n"
              "properly enable Ad-Hoc or\n"
              "Master mode:\n"
              "Ad-Hoc:\n"
              "\tset_port3 1\n"
              "Master:\n"
              "\tset_port3 0\n"
              "\n"
              "Additionally options for the\n"
              "iwspy utility can be specified.\n"
              "\n"
              "Be aware of the fact that wrong\n"
              "options can cause the settings\n"
              "process to fail, not only the\n"
              "additional settings!\n"
              "\n"
              "For more information on the\n"
              "iwconfig, iwspy and iwpriv\n"
              "utilities please consult the\n"
              "extra documentation.");
gchar *s = N_("Sure ?");
gchar *s = N_("Yes");
gchar *s = N_("No");
gchar *s = N_("\n"
              "Do you really want\n"
              "to delete this\n"
              "entry ?\n"
              "");
gchar *s = N_("Help");
gchar *s = N_("OK");
gchar *s = N_("Scheme\n"
              "\n"
              "Different WLAN cards may use\n"
              "different settings. Also different\n"
              "situations may require different\n"
              "settings.\n"
              "Using schemes it is possible to\n"
              "define several profiles for different\n"
              "situations and hardware combinations.\n"
              "The setting string may contain the\n"
              "globbing characters \"*\" and \"?\" for\n"
              "matching.\n"
              "Schemes are identified by\n"
              "\n"
              "Scheme name\n"
              "\tA simple string identifying\n"
              "\ta situation like e.g.\n"
              "\t\thome\n"
              "\t\toffice\n"
              "\t\t*\n"
              "\tMostly defaults to *\n"
              "\n"
              "Socket\n"
              "\tThe device socket number,\n"
              "\tusually 0 or 1.\n"
              "\tMostly defaults to *\n"
              "\n"
              "Instance\n"
              "\t???\n"
              "\tMostly defaults to *\n"
              "\n"
              "HW-Address\n"
              "\tThe hardware address of the\n"
              "\tcard. This makes it possible to\n"
              "\tidentify different hardware\n"
              "\tvendors and to set hardware\n"
              "\tspecific settings.\n"
              "\tHere the globbing characters\n"
              "\thelp to match a whole vendor\n"
              "\tdevice address range like e.g.\n"
              "\t\t00:60:1D:*|*,*,*,00:02:2D:*\n"
              "\twhich matches almost all\n"
              "\toriginal Lucent Wavelan cards.");
gchar *s = N_("GPE WLAN Config");
gchar *s = N_("Scheme");
gchar *s = N_("Scheme");
gchar *s = N_("Socket");
gchar *s = N_("Instance");
gchar *s = N_("HW-Address");
gchar *s = N_("Delete");
gchar *s = N_("New");
gchar *s = N_("Edit");
gchar *s = N_("label39");
gchar *s = N_("Scheme\n"
              "name");
gchar *s = N_("*");
gchar *s = N_("*");
gchar *s = N_("*");
gchar *s = N_("*");
gchar *s = N_("Socket\n"
              "number");
gchar *s = N_("Instance");
gchar *s = N_("Help");
gchar *s = N_("Hardware\n"
              "Address");
gchar *s = N_("Scheme");
gchar *s = N_("IEEE 802.11 WLAN");
gchar *s = N_("any");
gchar *s = N_("Ad-Hoc");
gchar *s = N_("Managed");
gchar *s = N_("Master");
gchar *s = N_("Repeater");
gchar *s = N_("Secondary");
gchar *s = N_("auto");
gchar *s = N_("Help");
gchar *s = N_("Info");
gchar *s = N_("ESSID");
gchar *s = N_("NWID");
gchar *s = N_("Mode");
gchar *s = N_("General");
gchar *s = N_("Rate");
gchar *s = N_("Auto");
gchar *s = N_("1M");
gchar *s = N_("11M");
gchar *s = N_("Help");
gchar *s = N_("Use default\n"
              "Channel");
gchar *s = N_("Frequency");
gchar *s = N_("Channel");
gchar *s = N_("GHz");
gchar *s = N_("RF Params");
gchar *s = N_("Encryption");
gchar *s = N_("On");
gchar *s = N_("Off");
gchar *s = N_("Mode");
gchar *s = N_("Open");
gchar *s = N_("Restricted");
gchar *s = N_("Help");
gchar *s = N_("WEP");
gchar *s = N_("Encryption Keys");
gchar *s = N_("Hex values");
gchar *s = N_("Strings");
gchar *s = N_("Keys are");
gchar *s = N_("Key #1");
gchar *s = N_("Key #2");
gchar *s = N_("Key #3");
gchar *s = N_("Key #4");
gchar *s = N_("Active\n"
              "Key #");
gchar *s = N_("Help");
gchar *s = N_("Enc.-Keys");
gchar *s = N_("Additional expert settings,\n"
              "USE WITH CARE!");
gchar *s = N_("Help");
gchar *s = N_("iwconfig");
gchar *s = N_("iwspy");
gchar *s = N_("iwpriv");
gchar *s = N_("Expert");
gchar *s = N_("label40");
