2005-08-06  Phil Blundell  <pb@reciva.com>

	* main.h: Include libintl.h to avoid warning.

2005-04-02  Luc Pionchon  <luc@handhelds.org>

	* main.c (main): replaced gpe_find_icon by gtk_image_new_from_pixbuf
	                 removed unused "#include render.h"
	* general_config.c (make_option_menu): Likewise.
	* networks_config.c: removed unused "#include render.h"
	(networks_config_edit_window): removed unused variable

2004-01-19 Paul Jakma <paul@dishone.st>

	* Makefile: bump version, gpe-irc now actually mostly works.
	* smiley_list: add some smileys
	* quick_list: add couple of useful phrases
	
2004-01-19 Paul Jakma <paul@dishone.st>

	* run all files through indent -nut to sanitise the sometimes
	  inconsistent style (eg mix of tab and whitespace indentation)
	* stripping of some dead code.
	* add missing includes to various files, eg string.h for strlen.
	* fix g_io_channel assert, apparently due to a mix of encoding
	  setting and not correctly detecting errors and returning
	  appropriate values to watch handlers. still a bit bogus though.
	  Eg, there appears to be no way to shutdown the channel and have
	  the channel watchers informed, hence we rely on server to close 
	  link otherwise we get an assert.
	* dictionary.c: (_dictionary_update_lookup_hash) 
	  fix dictionary hash lookup segv, remove allocation of hash from
	  this function.
	  (dictionary_new): allocate dictionary hash. remove redundant
	  setting of NULL for ->list.
	* irc.c: (handle_gerr) new function to handle logging and freeing of
          gerror messages (freeing here is probably bogus).
          (irc_server_send) return false if g_io_channel_write_chars()
	  returned an error.
	  (irc_server_hup) shutdown the channel. Not sure if we should unref
	  it too, documentation suggests returning false should be enough to 
	  have the channel freed by Glib internals.
	  (irc_server_connect) set encoding to UTF-8. This appears to be
	  required for 2-way IO channels. set channel to close on unref.
	* main.c: convert various gtk_object_set_data() to
	  g_object_set_data().
	  (button_clicked) check button is actually valid, we may have been
	  called by close_button_clicked which already has destroyed the 
	  widget.
	  (part_channel) is the destructor for the channel->name hash, hence
	  can obviously not call g_hash_table_remove, instead manually free
	  all the data and steal the hash entry.
	  (disconnect_from_server) do not call g_io_channel_shutdown(),
	  instead we depend on the server to close the channel.
	  use g_hash_table_destroy() rather than iterating through the hash.
	  (new_connection) set the destructor for the server->channel hash.

2003-07-06  Moray Allan  <moray@sermisy.org>

	* Makefile (install_program): Install .desktop file with .desktop
	filename extension.

2003-04-02 Paul Jakma <paul@dishone.st>

	irc.c: remove DEBUG define (moved to irc.h)
	add DEBUG statements.
	irc.h: add DEBUG define
	irc_parse.c: (irc_params_split) always strip s[0]
	(irc_parse_privmsg) remove g_strstrip() (see above)
	main.c: (append_to_buffer) add DEBUG statement and
	robustify this function slightly - if we dont find a matching
	hash, use the server output buffer by default.
