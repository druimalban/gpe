Here's a few design decisions that I made in this program:

1) I assumed that the code should be portable, and work on the x86
and ARM architectures.

2) I wanted to support two APIs: one being the standard 'at'
interface (which is 80% supported using the shell script + 'date'
invocation that I wrote), as well as a newer, simplified API.  The
idea was that /var/spool/at would be readable and writable by all
with the sticky bit like /tmp.  Programs would insert or remove
scripts into /var/spool/at.

3) /var/spool/at points at a ram directory.  /var/spool/cron would
also be in ram, but would be rebuilt at reboot time from /etc/cron/.
The idea here is that crontab entries are permanent; part of the
installed base of software, and that alarms are temporary and form
part of the user data that gets restored at reboot time.
