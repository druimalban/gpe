<!--#set var="addtitle" value="CVS"-->
<!--#set var="pagename" value="cvs"-->
<!--#include virtual="includes/head.shtml"-->

<H2>Accessing the GPE CVS repository</H2>
<p>
In short, if you are not (yet?) a developer, you do the following:
   <pre>
      $ cd gpe_cvs
      $ export CVSROOT=:pserver:anoncvs@cvs.handhelds.org:/cvs
      $ cvs login
      Logging in to :pserver:anoncvs@cvs.handhelds.org:2401/cvs
      CVS Password: anoncvs
      $ cvs checkout gpe
   </pre>
You only have to do this one time. The next time you want to update
your CVS, do:
   <pre>
      $ cd gpe_cvs
      $ cvs up
   </pre>
</p>
<P>
For a more detailed description about how to use handhelds.org CVS, please see
<a href="http://www.handhelds.org/handhelds-faq/development.html#USING-CVS">
here</a>.
</P>
<P>
You can watch the CVS repository directly by following
<A HREF="http://cvs.handhelds.org/cgi-bin/viewcvs.cgi/gpe/">this link</A>.
</P>

<H2>Building GPE CVS applications</H2>
<p>
There is no easy recipe for building GPE applications for the ARM
architecture yet. It can be built like any other application for your
desktop though.

Prerequisites for building GPE applications are libgpewidget, gpe-icons
and, for some applications, libsqlite (not in GPE CVS, but most likely
available as a package for your distribution -- you need to get the
libsqlite-dev(el) package in that case).

So do the following before you attempt to compile one of the GPE
applications:

   <pre>
      $ cd libgpewidget
      $ make libgpewidget
      $ make install libgpewidget
      $ cd ../gpe-icons
      $ make install gpe-icons
   </pre>
</p>

<!--#include virtual="includes/foot.shtml"-->
